:py:mod:`hypso.device`
======================

.. py:module:: hypso.device


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   hypso.device.Hypso



Functions
~~~~~~~~~

.. autoapisummary::

   hypso.device.set_or_create_attr



Attributes
~~~~~~~~~~

.. autoapisummary::

   hypso.device.EXPERIMENTAL_FEATURES


.. py:data:: EXPERIMENTAL_FEATURES
   :value: True

   

.. py:function:: set_or_create_attr(var, attr_name, attr_value)


.. py:class:: Hypso(hypso_path, points_path=None)


   .. py:method:: get_srf()


   .. py:method:: create_l1b_nc_file(hypso_nc_path)


   .. py:method:: create_geotiff(product='L2', force_reload=False, atmos_dict=None)


   .. py:method:: delete_geotiff_dir(top_folder_name)


   .. py:method:: find_geotiffs()


   .. py:method:: find_existing_l2_cube()


   .. py:method:: get_projection_metadata()


   .. py:method:: get_calibration_coefficients_path()


   .. py:method:: get_spectral_coefficients_path()


   .. py:method:: get_spectra(position_dict, product = 'L2', postype = 'coord', multiplier=1, filename=None, plot=True, L2_engine='6SV1')

      files_path: Works with a directorie with GeoTiff files. Uses the metadata, and integrated CRS
      position:
          [lat, lon] if postype=='coord'
          [X, Y| if postype == 'pix'
      postye:
          'coord' assumes latitude and longitude are passed.
          'pix' receives X and Y values


   .. py:method:: get_calibrated_and_corrected_cube()

      Calibrate cube.

      Includes:
      - Radiometric calibration
      - Smile correction
      - Destriping

      Assumes all coefficients has been adjusted to the frame size (cropped and
      binned), and that the data cube contains 12-bit values.


   .. py:method:: toa_reflectance_from_toa_radiance()



