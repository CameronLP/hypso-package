:py:mod:`hypso.atmospheric.atmospheric_correction_6sv1`
=======================================================

.. py:module:: hypso.atmospheric.atmospheric_correction_6sv1


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   hypso.atmospheric.atmospheric_correction_6sv1.BasicParameters
   hypso.atmospheric.atmospheric_correction_6sv1.clip_srf
   hypso.atmospheric.atmospheric_correction_6sv1.AtmosphericCorrection
   hypso.atmospheric.atmospheric_correction_6sv1.get_surface_reflectance
   hypso.atmospheric.atmospheric_correction_6sv1.get_corrected_radiance
   hypso.atmospheric.atmospheric_correction_6sv1.run_py6s



.. py:function:: BasicParameters(wavelengths, hypercube_L1, hypso_info, lat_2d_array, lon_2d_array, time_capture)

   Get the parameters you need for 6s atmospheric correction


.. py:function:: clip_srf(single_wl, single_srf)


.. py:function:: AtmosphericCorrection(BandId, SixsInputParameter, py6s_dict, srf)

   Call the 6s model and assign values to the parameters to obtain the atmospheric correction parameters


.. py:function:: get_surface_reflectance(radiance_band, py6s_results)

   Calculate surface reflectance from at-sensor radiance given waveband name


.. py:function:: get_corrected_radiance(radiance_band, py6s_results)


.. py:function:: run_py6s(wavelengths, hypercube_L1, hypso_info, lat_2d_array, lon_2d_array, py6s_dict, time_capture, srf)


